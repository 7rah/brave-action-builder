diff --git a/browser/ui/views/frame/brave_browser_view_layout.cc b/browser/ui/views/frame/brave_browser_view_layout.cc
index 3f790d22..b60d2fa9 100644
--- a/browser/ui/views/frame/brave_browser_view_layout.cc
+++ b/browser/ui/views/frame/brave_browser_view_layout.cc
@@ -141,8 +141,8 @@ int BraveBrowserViewLayout::LayoutTabStripRegion(int top) {
     // after we finish laying out views in top container.
     return top;
   }
-
-  return BrowserViewLayout::LayoutTabStripRegion(top);
+  return top;
+  //return BrowserViewLayout::LayoutTabStripRegion(top);
 }
 
 int BraveBrowserViewLayout::LayoutBookmarkAndInfoBars(int top,
diff --git a/browser/ui/views/frame/brave_tab_strip_region_view.cc b/browser/ui/views/frame/brave_tab_strip_region_view.cc
index 0e00c539..fdf3200a 100644
--- a/browser/ui/views/frame/brave_tab_strip_region_view.cc
+++ b/browser/ui/views/frame/brave_tab_strip_region_view.cc
@@ -27,8 +27,9 @@ void BraveTabStripRegionView::Layout(PassKey) {
   // Ensure that the new tab button is positioned after the last tab, with the
   // correct amount of padding.
   if (new_tab_button_) {
-    new_tab_button_->SetX(tab_strip_container_->bounds().right() +
-                          GetLayoutConstant(TAB_STRIP_PADDING));
+    new_tab_button_->SetBoundsRect(gfx::Rect());
+    //new_tab_button_->SetX(tab_strip_container_->bounds().right() +
+    //                      GetLayoutConstant(TAB_STRIP_PADDING));
   }
 }
